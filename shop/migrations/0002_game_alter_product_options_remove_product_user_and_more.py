# Generated by Django 4.1 on 2023-07-31 11:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shop', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='введите название игры', max_length=200, unique=True, verbose_name='Игра:')),
                ('slug', models.SlugField(help_text='http://127.0.0.1:8000/', max_length=200, unique=True, verbose_name='Ссылка:')),
            ],
            options={
                'verbose_name': 'Игра',
                'verbose_name_plural': 'Игры',
                'ordering': ('name',),
            },
        ),
        migrations.AlterModelOptions(
            name='product',
            options={'ordering': ('name',), 'verbose_name': 'Аккаунт', 'verbose_name_plural': 'Аккаунты'},
        ),
        migrations.RemoveField(
            model_name='product',
            name='user',
        ),
        migrations.AddField(
            model_name='product',
            name='country',
            field=models.CharField(choices=[('RU', 'Россия'), ('US', 'США'), ('KZ', 'Казахстан')], default=1, help_text='выберите регион из ниже перечисленых', max_length=200, verbose_name='Регион регистрации аккаунта:'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='product',
            name='seller',
            field=models.ForeignKey(default=1, help_text='выберите пользователя-продавца.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Продавец:'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(db_index=True, help_text='введите название категории', max_length=200, verbose_name='Название:'),
        ),
        migrations.AlterField(
            model_name='category',
            name='slug',
            field=models.SlugField(help_text='http://127.0.0.1:8000/', max_length=200, unique=True, verbose_name='Ссылка на категорию:'),
        ),
        migrations.AlterField(
            model_name='product',
            name='available',
            field=models.BooleanField(default=True, help_text='поставьте галочку, если есть', verbose_name='Наличие:'),
        ),
        migrations.AlterField(
            model_name='product',
            name='category',
            field=models.ForeignKey(help_text='выберите соц. сеть, к которой относится аккаунт', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='shop.category', verbose_name='Соц. сеть:'),
        ),
        migrations.AlterField(
            model_name='product',
            name='description',
            field=models.TextField(blank=True, help_text='укажите краткое описание продовамеого/ых аккаунта/ов.', verbose_name='Описание:'),
        ),
        migrations.AlterField(
            model_name='product',
            name='name',
            field=models.CharField(db_index=True, max_length=200, verbose_name='Заголовок объявления:'),
        ),
        migrations.AlterField(
            model_name='product',
            name='price',
            field=models.DecimalField(decimal_places=2, help_text='укажите цену', max_digits=10, verbose_name='Цена:'),
        ),
        migrations.AlterField(
            model_name='product',
            name='slug',
            field=models.SlugField(max_length=200, verbose_name='Имя ссылки на объявление:'),
        ),
        migrations.AlterField(
            model_name='product',
            name='stock',
            field=models.PositiveIntegerField(help_text='укажите количество товарных единиц', verbose_name='Кол-во:'),
        ),
        migrations.CreateModel(
            name='PSIFParamsForProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('channels', 'Кол-во каналов'), ('groups', 'Кол-во групп'), ('chats', 'Кол-во чатов'), ('admin_chats', 'Кол-во админ чатов'), ('guaranty', 'Срок гарантии'), ('posts', 'Кол-во постов'), ('age', 'Возраст'), ('friends', 'Друзей')], help_text='выберите параметр', max_length=200, verbose_name='Параметр:')),
                ('active', models.PositiveSmallIntegerField(help_text='введите значение соответствующие параметру', verbose_name='Кол-во:')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='psif_params', to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='PIFParamsForProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('chat_subs', 'Кол-во подписчиков в чатах'), ('general_balance', 'Баланс на аккаунте'), ('followers', 'Кол-во Подписчиков'), ('votes', 'Кол-во голосов')], help_text='выберите параметр', max_length=200, verbose_name='Параметр:')),
                ('active', models.PositiveIntegerField(help_text='введите значение соответствующие параметру', verbose_name='Кол-во:')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pif_params', to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='HistoryByAccountGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_name', models.CharField(max_length=200)),
                ('torrent_file', models.FileField(upload_to='torrents/')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='shop.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GameOnSteam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.PositiveSmallIntegerField(help_text='укажите примерную стоимость внутриигровых предметов', verbose_name='Стоимость инвентаря конкретной игры на акк.:')),
                ('block', models.BooleanField(default=False, help_text='поставьте галочку, если есть', verbose_name='Внтуриигровая блокировка(VAC):')),
                ('acc', models.ForeignKey(help_text='выберите аккаунт, для которого хотите указать доп. данные', on_delete=django.db.models.deletion.CASCADE, related_name='games', to='shop.product', verbose_name='Аккаунт:')),
                ('game', models.ForeignKey(help_text='выберите игру, которая есть на аккаунте.', on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='shop.game', verbose_name='Игра:')),
            ],
            options={
                'verbose_name': 'Игры на аккаунте',
                'verbose_name_plural': 'Игры на аккаунтах',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BoolParamsForProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('premium', 'Премиум'), ('spam_block', 'Спам блок'), ('password', 'Пароль'), ('email_available', 'Доступ к почте'), ('cookies', 'Куки'), ('phone_number_dep', 'Привязка к телефону')], help_text='выберите параметр', max_length=200, verbose_name='Параметр:')),
                ('active', models.BooleanField(default=False, help_text='поставьте галочку, если параметр есть', verbose_name='Наличие:')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bool_params', to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='AccountGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_name', models.CharField(help_text='введите название аккаунта', max_length=200, verbose_name='Название аккаунта:')),
                ('torrent_file', models.FileField(help_text='загрузить файл с данными', upload_to='torrents/', verbose_name='Данные:')),
                ('product', models.ForeignKey(help_text='выберите нужный аккаунт', on_delete=django.db.models.deletion.CASCADE, to='shop.product', verbose_name='Аккаунт:')),
            ],
        ),
    ]
